[{"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\HeaderComponent.js":"1","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\FooterCompoent.js":"2","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\index.js":"3","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\MainComponent.js":"5","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\dishes.js":"6","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\comments.js":"7","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\leader.js":"8","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\HomeComponent.js":"9","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\DishdetailComponent.js":"10","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\reportWebVitals.js":"12","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\AboutComponent.js":"13","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\App.js":"15","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\redux\\configureStore.js":"16"},{"size":5628,"mtime":1611900164328,"results":"17","hashOfConfig":"18"},{"size":2686,"mtime":1611783302981,"results":"19","hashOfConfig":"18"},{"size":663,"mtime":1611521588940,"results":"20","hashOfConfig":"18"},{"size":1433,"mtime":1611727062107,"results":"21","hashOfConfig":"18"},{"size":2218,"mtime":1612310310234,"results":"22","hashOfConfig":"18"},{"size":1490,"mtime":1611723462603,"results":"23","hashOfConfig":"18"},{"size":4280,"mtime":1611723484017,"results":"24","hashOfConfig":"18"},{"size":2382,"mtime":1611723508022,"results":"25","hashOfConfig":"18"},{"size":1110,"mtime":1611724449507,"results":"26","hashOfConfig":"18"},{"size":7395,"mtime":1612069997781,"results":"27","hashOfConfig":"18"},{"size":10906,"mtime":1612063174610,"results":"28","hashOfConfig":"18"},{"size":375,"mtime":1611097045178,"results":"29","hashOfConfig":"18"},{"size":4405,"mtime":1611784734738,"results":"30","hashOfConfig":"18"},{"size":445,"mtime":1611723495442,"results":"31","hashOfConfig":"18"},{"size":558,"mtime":1611978356138,"results":"32","hashOfConfig":"18"},{"size":482,"mtime":1612310543589,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1loz0iw",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\HeaderComponent.js",["72"],"import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\nButton, Modal, ModalHeader, ModalBody, FormGroup, Form, Label, Input} from 'reactstrap';\r\nimport {NavLink, Navlink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username: \"+ this.username.value + \" Password: \" + this.password.value \r\n        + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"> \r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante confusion\"></img>\r\n                         </NavbarBrand>\r\n                         <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"> Home </span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"> About Us </span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"> Menu </span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-adress-card fa-lg\"> Contact Us </span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"> Login </span>\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                         </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1> Ristorante confusion </h1>\r\n                                <p> We take inspiration from the worldÂ´s best cuisines, and create a unique fusion experience. \r\n                                    Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\"> Username </Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username = input}></Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\"> Password </Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password = input}></Input>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}></Input>\r\n                                    Remember me \r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\"> Login </Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );       \r\n    }\r\n}\r\n\r\nexport default Header;",["73","74"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\FooterCompoent.js",[],["75","76"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\index.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\MenuComponent.js",["77","78"],"import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction RenderMenuItem({dish, onClick}){\r\n    return(\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />\r\n                <CardImgOverlay  className=\"ml-5\">\r\n                    <CardTitle> {dish.name} </CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish}/>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'> Home </Link></BreadcrumbItem>    \r\n                    <BreadcrumbItem active> Menu </BreadcrumbItem>                \r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3> Menu </h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default Menu;","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\MainComponent.js",["79"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\leader.js",[],["80","81"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\DishdetailComponent.js",["82","83","84","85"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Button,\r\n    Label,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\n    const required = (val) => val && val.length;\r\n    const maxLength = (len) => val => !val || val.length <= len;\r\n    const minLength = (len) => val => val && val.length >= len;\r\n\r\n    class CommentForm extends Component {\r\n        \r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state = {\r\n                isModalOpen: false\r\n            };\r\n\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n\r\n        toggleModal(){\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n\r\n        handleSubmit(values){\r\n            alert(\"Current state is: \" + JSON.stringify(values));\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <div>\r\n                    <Button onClick={this.toggleModal}>\r\n                        <span className=\"fa fa-pencil fa-lg\"> Submit Comment </span>\r\n                     </Button>\r\n                     <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}> Submit Comment </ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={this.handleSubmit}> \r\n                                <Row className=\"form-group\">\r\n                                    <Label hmtlFor=\"rating\" md={12}> Rating </Label>\r\n                                    <Col md={{size: 12}}> \r\n                                        <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                            <option> 1 </option>\r\n                                            <option> 2 </option>\r\n                                            <option> 3 </option>\r\n                                            <option> 4 </option>\r\n                                            <option> 5 </option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label hmtlFor=\"name\" md={12}> Your Name </Label>\r\n                                    <Col md={{size: 12}}>\r\n                                        <Control.text model=\".name\" name=\"name\" className=\"form-control\"\r\n                                            placeholder=\"Your Name\"\r\n                                            validators={{\r\n                                                required,\r\n                                                minLength: minLength(3),\r\n                                                maxLength: maxLength(15)   \r\n                                            }}>\r\n                                        </Control.text>\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}>    \r\n                                        </Errors>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label hmtlFor=\"comment\" md={12}> Comment </Label>\r\n                                    <Col md={{size: 12}}>\r\n                                        <Control.textarea model=\".comment\" name=\"comment\" className=\"form-control\" \r\n                                            rows={5}>\r\n                                        </Control.textarea>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 10}}>\r\n                                        <Button type=\"submit\" color=\"primary\"> Submit </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                     </Modal>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderDish({dish}){\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle> {dish.name} </CardTitle>\r\n                        <CardText> {dish.description} </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function RenderComments({comments}){\r\n        if(comments != null){\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4> Comments </h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        {comments.map((comment) => {\r\n                            return(\r\n                                <li key={comment.id}> \r\n                                    <p> {comment.comment} </p>\r\n                                    <p>-- {comment.author},  {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </p>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    <CommentForm />\r\n                </div>\r\n            );\r\n        }   \r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if(props.dish != null){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'> Menu </Link></BreadcrumbItem>   \r\n                            <BreadcrumbItem active> {props.dish.name} </BreadcrumbItem>                \r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3> {props.dish.name} </h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\nexport default DishDetail;","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\ContactComponent.js",["86","87","88","89","90","91","92","93","94","95"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\App.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\redux\\configureStore.js",[],{"ruleId":"96","severity":1,"message":"97","line":4,"column":18,"nodeType":"98","messageId":"99","endLine":4,"endColumn":25},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"96","severity":1,"message":"106","line":2,"column":41,"nodeType":"98","messageId":"99","endLine":2,"endColumn":49},{"ruleId":"96","severity":1,"message":"107","line":2,"column":51,"nodeType":"98","messageId":"99","endLine":2,"endColumn":59},{"ruleId":"108","severity":1,"message":"109","line":24,"column":5,"nodeType":"110","messageId":"111","endLine":26,"endColumn":6},{"ruleId":"100","replacedBy":"112"},{"ruleId":"102","replacedBy":"113"},{"ruleId":"96","severity":1,"message":"114","line":2,"column":25,"nodeType":"98","messageId":"99","endLine":2,"endColumn":39},{"ruleId":"115","severity":1,"message":"116","line":54,"column":41,"nodeType":"117","endLine":54,"endColumn":112},{"ruleId":"115","severity":1,"message":"118","line":66,"column":41,"nodeType":"117","endLine":72,"endColumn":48},{"ruleId":"115","severity":1,"message":"119","line":89,"column":41,"nodeType":"117","endLine":90,"endColumn":54},{"ruleId":"96","severity":1,"message":"120","line":2,"column":46,"nodeType":"98","messageId":"99","endLine":2,"endColumn":50},{"ruleId":"96","severity":1,"message":"121","line":2,"column":52,"nodeType":"98","messageId":"99","endLine":2,"endColumn":61},{"ruleId":"122","severity":1,"message":"123","line":60,"column":29,"nodeType":"117","endLine":60,"endColumn":71},{"ruleId":"115","severity":1,"message":"118","line":74,"column":37,"nodeType":"117","endLine":80,"endColumn":44},{"ruleId":"115","severity":1,"message":"118","line":96,"column":37,"nodeType":"117","endLine":102,"endColumn":44},{"ruleId":"115","severity":1,"message":"118","line":118,"column":37,"nodeType":"117","endLine":124,"endColumn":44},{"ruleId":"115","severity":1,"message":"118","line":141,"column":37,"nodeType":"117","endLine":147,"endColumn":44},{"ruleId":"115","severity":1,"message":"124","line":163,"column":45,"nodeType":"117","endLine":165,"endColumn":52},{"ruleId":"115","severity":1,"message":"116","line":171,"column":37,"nodeType":"117","endLine":172,"endColumn":66},{"ruleId":"115","severity":1,"message":"119","line":181,"column":37,"nodeType":"117","endLine":183,"endColumn":68},"no-unused-vars","'Navlink' is defined but never used.","Identifier","unusedVar","no-native-reassign",["125"],"no-negated-in-lhs",["126"],["125"],["126"],"'CardText' is defined but never used.","'CardBody' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["125"],["126"],"'CardImgOverlay' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Form' is defined but never used.","'FormGroup' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]