[{"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\HeaderComponent.js":"1","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\FooterCompoent.js":"2","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\index.js":"3","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\MainComponent.js":"5","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\dishes.js":"6","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\comments.js":"7","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\leader.js":"8","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\HomeComponent.js":"9","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\DishdetailComponent.js":"10","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\reportWebVitals.js":"12","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\AboutComponent.js":"13","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\App.js":"15","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\redux\\reducer.js":"16","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\redux\\configureStore.js":"17"},{"size":5628,"mtime":1611900164328,"results":"18","hashOfConfig":"19"},{"size":2686,"mtime":1611783302981,"results":"20","hashOfConfig":"19"},{"size":663,"mtime":1611521588940,"results":"21","hashOfConfig":"19"},{"size":1433,"mtime":1611727062107,"results":"22","hashOfConfig":"19"},{"size":2208,"mtime":1611978748625,"results":"23","hashOfConfig":"19"},{"size":1490,"mtime":1611723462603,"results":"24","hashOfConfig":"19"},{"size":4280,"mtime":1611723484017,"results":"25","hashOfConfig":"19"},{"size":2382,"mtime":1611723508022,"results":"26","hashOfConfig":"19"},{"size":1110,"mtime":1611724449507,"results":"27","hashOfConfig":"19"},{"size":2637,"mtime":1611727559800,"results":"28","hashOfConfig":"19"},{"size":10986,"mtime":1611897303939,"results":"29","hashOfConfig":"19"},{"size":375,"mtime":1611097045178,"results":"30","hashOfConfig":"19"},{"size":4405,"mtime":1611784734738,"results":"31","hashOfConfig":"19"},{"size":445,"mtime":1611723495442,"results":"32","hashOfConfig":"19"},{"size":568,"mtime":1611978350051,"results":"33","hashOfConfig":"19"},{"size":406,"mtime":1611977554129,"results":"34","hashOfConfig":"19"},{"size":209,"mtime":1611978209328,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1loz0iw",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\HeaderComponent.js",["75"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\FooterCompoent.js",[],["76","77"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\index.js",[],["78","79"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\MenuComponent.js",["80","81"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\MainComponent.js",["82"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\leader.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\DishdetailComponent.js",["83"],"import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n    function RenderDish({dish}){\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle> {dish.name} </CardTitle>\r\n                        <CardText> {dish.description} </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function RenderComments({comments}){\r\n        if(comments != null){\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4> Comments </h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        {comments.map((comment) => {\r\n                            return(\r\n                                <li key={comment.id}> \r\n                                    <p> {comment.comment} </p>\r\n                                    <p>-- {comment.author},  {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </p>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }   \r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if(props.dish != null){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'> Menu </Link></BreadcrumbItem>   \r\n                            <BreadcrumbItem active> {props.dish.name} </BreadcrumbItem>                \r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3> {props.dish.name} </h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\nexport default DishDetail;",["84","85"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\ContactComponent.js",["86"],"import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname : '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"Current state is: \" + JSON.stringify(this.state));\r\n        alert(\"Current state is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (event) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true}\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email){\r\n        const errors = {\r\n            firstname: '',\r\n            lastname : '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if(this.state.touched.firstname && firstname.length < 3){\r\n            errors.firstname = 'First name should be >= 3 characters';\r\n        }\r\n        else if(this.state.touched.firstname && firstname.length > 10){\r\n            errors.firstname = 'First name should be <= 10 characters';\r\n        }\r\n\r\n        if(this.state.touched.lastname && lastname.length < 3){\r\n            errors.lastname = 'Last name should be >= 3 characters';\r\n        }\r\n        else if(this.state.touched.lastname && lastname.length > 10){\r\n            errors.lastname = 'Last name should be <= 10 characters';\r\n        }\r\n\r\n        const reg = /^\\d+$/;\r\n        if(this.state.touched.telnum && !reg.test(telnum)){\r\n            errors.telnum = 'Tel. Numbers should contain only numbers';\r\n        }\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1){\r\n            errors.email = 'Email should contain a @';\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    render(){\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'> Home </Link></BreadcrumbItem>    \r\n                        <BreadcrumbItem active> Contact Us </BreadcrumbItem>                \r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3> Contact Us </h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3> Send us your feedback </h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First name\" value={this.state.firstname}\r\n                                        valid={errors.firstname===''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.handleBlur('firstname')}></Input>\r\n                                        <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lasttname\" md={2}>Last name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last name\" value={this.state.lastname}\r\n                                        valid={errors.lastname ===''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.handleBlur('lastname')}></Input>\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum ===''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onChange={this.handleInputChange} \r\n                                        onBlur={this.handleBlur('telnum')}/>\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email ===''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.handleBlur('email')} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\"\r\n                                                name=\"agree\"\r\n                                                checked={this.state.agree}\r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                            value={this.state.contactType}\r\n                                            onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleInputChange}></Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\App.js",["87"],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\redux\\reducer.js",[],"C:\\Users\\merin\\Desktop\\Coursera\\Front-End Web Development with React\\code\\confusion\\src\\redux\\configureStore.js",[],{"ruleId":"88","severity":1,"message":"89","line":4,"column":18,"nodeType":"90","messageId":"91","endLine":4,"endColumn":25},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"88","severity":1,"message":"98","line":2,"column":41,"nodeType":"90","messageId":"91","endLine":2,"endColumn":49},{"ruleId":"88","severity":1,"message":"99","line":2,"column":51,"nodeType":"90","messageId":"91","endLine":2,"endColumn":59},{"ruleId":"100","severity":1,"message":"101","line":24,"column":5,"nodeType":"102","messageId":"103","endLine":26,"endColumn":6},{"ruleId":"88","severity":1,"message":"104","line":2,"column":25,"nodeType":"90","messageId":"91","endLine":2,"endColumn":39},{"ruleId":"92","replacedBy":"105"},{"ruleId":"94","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":120,"column":29,"nodeType":"109","endLine":120,"endColumn":71},{"ruleId":null,"fatal":true,"severity":2,"message":"110","line":20,"column":28},"no-unused-vars","'Navlink' is defined but never used.","Identifier","unusedVar","no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"'CardText' is defined but never used.","'CardBody' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CardImgOverlay' is defined but never used.",["111"],["112"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: Unterminated JSX contents\n\n  18 |           </div>\n  19 |         </BrowserRouter>\n> 20 |       <Provider></Provider>\n     |                            ^\n  21 |     );\n  22 |   }\n  23 | }","no-global-assign","no-unsafe-negation"]